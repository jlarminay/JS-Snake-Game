var $main_loop;$turn=0,$start=!1,$game=!0,$timeBetween=1,$logs=!0,$detailed=!1,$auto_restart=!0,$record_history=!0,$print_method="table",$map_grid=[],$map_x=10,$map_y=20,$directions=["u","u","u","u"],$snakes=[],$hunger=[100,100,100,100],$foods=[],$dead=[],$tile_empty=1,$tile_food="f",$tile_snakes=["A","B","C","D"],$snake_count=3,$human=1,$ai=2,$wins=[0,0,0,0],$history=[],$(document).ready((function(){function writeHistory(){$history[$turn]={snakes:$snakes,hunger:$hunger,"":""}}function generateGrid(){for(i=0,map=[];$map_x>i;){for(j=0,tmp=[];$map_y>j;)tmp.push($tile_empty),j++;map.push(tmp),i++}$.each($snakes,(function(i,ial){if($.each(ial,(function(j,jal){map[jal.x][jal.y]=0})),ial.length>3){var tail=ial[ial.length-1];map[tail.x][tail.y]=1}})),$.each($foods,(function(i,val){map[val.x][val.y]=$tile_food})),$map_grid=map,writeGrid()}function writeGrid(){"text"==$print_method&&($("#main-table").hide(),$("#main-grid").show(),grid=$("#main-grid"),grid.val(""),$.each($map_grid,(function(i,val){grid.val(grid.val()+"\n"+val)}))),"table"==$print_method&&($("#main-grid").hide(),$("#main-table").show(),table=$("#main-table"),table.find("tr").remove(),$.each($map_grid,(function(i,val){tmp="<tr>",$.each(val,(function(j,jal){tmp+="<td x='"+i+"' y='"+j+"'></td>"})),tmp+="</tr>",table.append(tmp)})),$.each($foods,(function(i,val){$("td[x="+val.x+"][y="+val.y+"]").attr("tile","f")})),$.each($snakes,(function(i,val){$.each(val,(function(j,jal){0==j?$("td[x="+jal.x+"][y="+jal.y+"]").attr("tile",$tile_snakes[i]):$("td[x="+jal.x+"][y="+jal.y+"]").attr("tile",$tile_snakes[i].toLowerCase())}))})))}function spawnSnake(){for(i=0;i<$snake_count;){for(var empty=!1;!empty;){var pos={x:Math.floor(Math.random()*($map_x-2))+2,y:Math.floor(Math.random()*($map_y-2))+2};$map_grid[pos.x][pos.y]==$tile_empty&&(empty=!0)}writeLog("Spawned snake "+$tile_snakes[i]+" on "+pos.x+"-"+pos.y),$snakes[i]=[pos,pos,pos,pos],i++}}function spawnFood(num=1){for(i=0;i<num;){for(var empty=!1;!empty;){var pos={x:Math.floor(Math.random()*$map_x),y:Math.floor(Math.random()*$map_y)};$map_grid[pos.x][pos.y]==$tile_empty&&(empty=!0)}$foods.push(pos),writeLog("Spawned food on "+pos.x+"-"+pos.y),i++}}function writeLog(string){if($logs){$("#log-holder").show(),$("#logs_write").val($("#logs_write").val()+string+"\n");var textarea=document.getElementById("logs_write");textarea.scrollTop=textarea.scrollHeight}else $("#log-holder").hide()}function getNextPos(cur,head){var next=[-1,-1],dir=$directions[cur];return"u"==dir&&(next={x:parseInt(head.x)-1,y:head.y}),"d"==dir&&(next={x:parseInt(head.x)+1,y:head.y}),"r"==dir&&(next={x:head.x,y:parseInt(head.y)+1}),"l"==dir&&(next={x:head.x,y:parseInt(head.y)-1}),next}function checkTargetSquare(cur,next){if(next.x<0)return"wall";if(next.x>=$map_x)return"wall";if(next.y>=$map_y)return"wall";if(next.y<0)return"wall";var tail=$snakes[cur][$snakes[count].length-1],tile=$map_grid[next.x][next.y];return"f"==tile?"food":tile!=$tile_empty&&tail!=next?"self":void 0}function pad(num,len=3){return("0000000000"+num).slice(-len)}function updateData(){$detailed&&$("#data .detailed").show(),$("#data #data-game").text($start),$("#data #data-speed").text($timeBetween),$("#data #data-turn").text(pad($turn,4)),$.each($snakes,(function(i,val){$("#snakes #data-"+i).show(),type="AI",i<$human&&(type="Human"),$auto_restart&&($("#snakes .auto").show(),$("#snakes #data-"+i+" .auto").text(pad($wins[i]))),$("#snakes #data-"+i+" #data-"+i+"_typ").text(type),$("#snakes #data-"+i+" #data-"+i+"_hun progress").val($hunger[i]),$("#snakes #data-"+i+" #data-"+i+"_dir").text($directions[i]),$("#snakes #data-"+i+" #data-"+i+"_len").text(pad($snakes[i].length))}))}function moveSnake(cur){var head=$snakes[cur][0],next=getNextPos(cur,head);writeLog("Snake "+$tile_snakes[cur]+" moved "+head.x+"-"+head.y+" -> "+next.x+"-"+next.y);var result=checkTargetSquare(cur,next);if("wall"==result)return writeLog("\nSnake "+$tile_snakes[cur]+" collided with wall"),snakeDead(cur),!1;if("self"==result)return writeLog("\nSnake "+$tile_snakes[cur]+" collided with self"),snakeDead(cur),!1;if("food"==result){var last=$snakes[cur][$snakes[cur].length-1];$snakes[cur].push(last);for(var i=$foods.length-1;i>=0;i--)$foods[i].x==next.x&&$foods[i].y==next.y&&$foods.splice(i,1);$hunger[cur]=100,writeLog("Snake "+$tile_snakes[cur]+" ate food at "+next.x+"-"+next.y),spawnFood()}$snakes[cur].unshift(next),$snakes[cur].pop()}function snakeDead(cur){$dead.push(cur),$snakes[cur]=[],writeLog("----- Snake "+$tile_snakes[count]+" Died  -----"),$dead.length>=$snake_count-1&&(won=-1,$.each($snakes,(function(i,val){val.length>0&&(won=i)})),$wins[won]=$wins[won]+1,$game=!1,$start=!1,writeLog("\n\n---------- Game Over  ----------"),writeLog("---------- Snake "+i+" Won  ----------"),clearInterval($main_loop),$auto_restart&&reloadGame())}function closestFood(cur){var head=$snakes[cur][0],close=[],dist=1e8;return $.each($foods,(function(i,val){var d=0;d+=Math.abs(head.x-val.x),(d+=Math.abs(head.y-val.y))<dist&&(dist=d,close=val)})),close}function getDirectionToPos(cur,target){var head=$snakes[cur][0];return head.x>target.x&&"d"!=$directions[cur]?$directions[cur]="u":head.x<target.x&&"u"!=$directions[cur]?$directions[cur]="d":head.y>target.y&&"r"!=$directions[cur]?$directions[cur]="l":head.y<target.y&&"l"!=$directions[cur]&&($directions[cur]="r"),!0}function reloadGame(){clearInterval($main_loop),$turn=0,$hunger=[100,100,100,100],$snakes=[],$foods=[],$dead=[],$game=!0,$start=!0,main()}function main(){generateGrid(),spawnSnake(),generateGrid(),spawnFood($snake_count+1),generateGrid(),$main_loop=setInterval((function(){if($start){for(count=0;count<=$snake_count-1;count++)if(!$dead.includes(count)){if($hunger[count]=$hunger[count]-1,$hunger[count]<=0)return writeLog("\nSnake "+$tile_snakes[count]+" starved to death"),void snakeDead(count);if(robot=!1,count>=$human&&(robot=!0),writeLog("\n-Snake "+$tile_snakes[count]+" turn-"),robot)if($hunger[count]<=75){var food=closestFood(count);writeLog("Snake "+$tile_snakes[count]+" closest food at "+food.x+"-"+food.y);var head=$snakes[count][0],graph,start=(graph=new Graph($map_grid)).grid[head.x][head.y],end=graph.grid[food.x][food.y],result;if((result=astar.search(graph,start,end)).length>0)getDirectionToPos(count,result[0]);else{var tail=$snakes[count][$snakes[count].length-1],end=graph.grid[tail.x][tail.y],result;(result=astar.search(graph,start,end)).length>0&&getDirectionToPos(count,result[0])}}else{var tail=$snakes[count][$snakes[count].length-1],head=$snakes[count][0],graph,start=(graph=new Graph($map_grid)).grid[head.x][head.y],end=graph.grid[tail.x][tail.y],result;(result=astar.search(graph,start,end)).length>0&&getDirectionToPos(count,result[0])}moveSnake(count),generateGrid()}$turn++}updateData()}),$timeBetween)}$("button#start").click((function(){$start=!$start,$game||($start=!1),updateData()})),$("button#restart").click((function(){$("#logs_write").val(""),reloadGame()})),$("button#generate").click((function(){$timeBetween=parseInt($("#options #speed").val()),$map_x=parseInt($("#options #map_x").val()),$map_y=parseInt($("#options #map_y").val()),$human=parseInt($("#options #human").val()),$ai=parseInt($("#options #ai").val()),$snake_count=$human+$ai,$snake_count>4&&($snake_count=4),$print_method=$("#options #map_type").val(),$logs="true"==$("#options #logs").val(),$detailed="true"==$("#options #details").val(),$auto_restart="true"==$("#options #auto_reload").val(),$record_history="true"==$("#options #history").val(),main(),$("#options").slideUp(),$("#game").slideDown()})),$("#extra").click((function(e){e.preventDefault(),$("tr.extra").toggle()})),document.onkeydown=function(e){e=e||window.event,$human>0&&(87==e.keyCode&&"d"!=$directions[0]&&($directions[0]="u"),83==e.keyCode&&"u"!=$directions[0]&&($directions[0]="d"),68==e.keyCode&&"l"!=$directions[0]&&($directions[0]="r"),65==e.keyCode&&"r"!=$directions[0]&&($directions[0]="l")),$human>1&&(38==e.keyCode&&"d"!=$directions[1]&&($directions[1]="u"),40==e.keyCode&&"u"!=$directions[1]&&($directions[1]="d"),39==e.keyCode&&"l"!=$directions[1]&&($directions[1]="r"),37==e.keyCode&&"r"!=$directions[1]&&($directions[1]="l")),updateData()}}));